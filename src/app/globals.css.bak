@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

:root {
  /* Theme variables */
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 240, 249, 255;
  --background-end-rgb: 248, 250, 252;

  /* Editor colors */
  --editor-bg: 31, 41, 55;
  --editor-border: 55, 65, 81;
  --editor-text: 243, 244, 246;
  --editor-text-muted: 156, 163, 175;
  --editor-accent: 96, 165, 250;
  --editor-code-bg: 55, 65, 81;
  --editor-highlight: 251, 191, 36;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 15, 23, 42;
    --background-end-rgb: 2, 6, 23;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
    to bottom,
    transparent,
    rgb(var(--background-end-rgb))
  )
  rgb(var(--background-start-rgb));
}

/* Base editor styles */
.tiptap-editor {
  min-height: 400px;
  margin-bottom: 2rem;
  background-color: rgb(31, 41, 55);
  border-radius: 0.375rem;
  overflow: hidden;
}

/* Editor content area */
.ProseMirror {
  min-height: 300px;
  outline: none;
  padding: 1.5rem;
  background-color: rgb(31, 41, 55);
  color: rgb(243, 244, 246);
  border: 1px solid rgb(55, 65, 81);
  border-top: none;
  border-bottom-left-radius: 0.375rem;
  border-bottom-right-radius: 0.375rem;
}

.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  color: rgb(156, 163, 175);
  pointer-events: none;
  float: left;
  height: 0;
}

/* Typography */
.ProseMirror h1 {
  font-size: 2em;
  font-weight: bold;
  margin: 1.5rem 0 1rem;
}

.ProseMirror h2 {
  font-size: 1.5em;
  font-weight: bold;
  margin: 1.25rem 0 0.75rem;
}

.ProseMirror h3 {
  font-size: 1.17em;
  font-weight: bold;
  margin: 1rem 0 0.5rem;
}

.ProseMirror p {
  margin: 0.75rem 0;
  line-height: 1.5;
}

/* Lists */
.ProseMirror ul {
  list-style-type: disc;
  padding-left: 1.5rem;
  margin: 0.75rem 0;
}

.ProseMirror ol {
  list-style-type: decimal;
  padding-left: 1.5rem;
  margin: 0.75rem 0;
}

/* Blockquotes */
.ProseMirror blockquote {
  padding-left: 1rem;
  border-left: 4px solid rgb(55, 65, 81);
  font-style: italic;
  color: rgb(156, 163, 175);
  margin: 1rem 0;
}

/* Code blocks */
.ProseMirror code {
  background-color: rgb(55, 65, 81);
  color: rgb(243, 244, 246);
  padding: 0.2em 0.4em;
  border-radius: 0.25rem;
  font-family: ui-monospace, monospace;
  font-size: 0.875em;
}

.ProseMirror pre {
  background-color: rgb(55, 65, 81);
  color: rgb(243, 244, 246);
  padding: 1rem;
  border-radius: 0.5rem;
  font-family: ui-monospace, monospace;
  margin: 1rem 0;
}

.ProseMirror pre code {
  background: none;
  padding: 0;
}

/* Images */
.ProseMirror img {
  max-width: 100%;
  height: auto;
  border-radius: 0.5rem;
  margin: 1rem 0;
}

/* Toolbar */
.tiptap-toolbar {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  padding: 0.75rem;
  background-color: rgb(31, 41, 55);
  border: 1px solid rgb(55, 65, 81);
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
  position: sticky;
  top: 0;
  z-index: 10;
}

.tiptap-toolbar button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 2rem;
  padding: 0.375rem;
  font-size: 0.875rem;
  border: 1px solid rgb(55, 65, 81);
  background: transparent;
  color: rgb(156, 163, 175);
  border-radius: 0.375rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.tiptap-toolbar button:hover {
  background-color: rgb(55, 65, 81);
  color: rgb(243, 244, 246);
}

.tiptap-toolbar button.is-active {
  background-color: rgb(55, 65, 81);
  color: rgb(96, 165, 250);
  border-color: rgb(96, 165, 250);
}

.tiptap-divider {
  width: 1px;
  height: 2rem;
  background-color: rgb(55, 65, 81);
  margin: 0 0.25rem;
}

/* Links */
.ProseMirror a {
  color: rgb(96, 165, 250);
  text-decoration: underline;
  cursor: pointer;
}

/* Highlight */
.ProseMirror mark {
  background-color: rgb(251, 191, 36);
  color: rgb(31, 41, 55);
  padding: 0.2em 0;
}

/* Utilities */
.text-balance {
  text-wrap: balance;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
    to bottom,
    transparent,
    rgb(var(--background-end-rgb))
  )
  rgb(var(--background-start-rgb));
}

/* TipTap Editor Styles */
.ProseMirror {
  @apply min-h-[300px] outline-none;
}

.ProseMirror p.is-editor-empty:first-child::before {
  @apply text-editor-placeholder pointer-events-none float-left h-0;
  content: attr(data-placeholder);
}

.ProseMirror h1 {
  @apply text-3xl font-bold mt-6 mb-4;
}

.ProseMirror h2 {
  @apply text-2xl font-bold mt-5 mb-3;
}

.ProseMirror h3 {
  @apply text-xl font-bold mt-4 mb-2;
}

.ProseMirror p {
  @apply my-3 leading-relaxed;
}

.ProseMirror ul {
  @apply list-disc pl-6 my-3;
}

.ProseMirror ol {
  @apply list-decimal pl-6 my-3;
}

.ProseMirror blockquote {
  @apply pl-4 border-l-4 border-editor-border italic text-editor-placeholder my-4;
}

.ProseMirror code {
  @apply bg-editor-code-bg text-editor-code-text px-2 py-0.5 rounded font-mono text-sm;
}

.ProseMirror pre {
  @apply bg-editor-code-bg text-editor-code-text p-4 rounded-lg font-mono my-4;
}

.ProseMirror pre code {
  @apply bg-transparent p-0 text-inherit;
}

.ProseMirror img {
  @apply max-w-full rounded-lg my-4;
}

/* TipTap Toolbar Styles */
.tiptap-toolbar {
  @apply flex flex-wrap gap-2 p-3 bg-editor-toolbar-bg border border-editor-border rounded-t-lg sticky top-0 z-10;
}

.tiptap-toolbar button {
  @apply inline-flex items-center justify-center w-8 h-8 p-1.5 text-sm border border-editor-border rounded bg-transparent text-editor-toolbar-button transition-colors;
}

.tiptap-toolbar button:hover {
  @apply bg-editor-border text-editor-toolbar-buttonHover;
}

.tiptap-toolbar button.is-active {
  @apply bg-editor-border text-editor-toolbar-buttonActive border-editor-toolbar-buttonActive;
}

.tiptap-divider {
  @apply w-px h-8 bg-editor-toolbar-divider my-0 mx-1;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 15, 23, 42;
    --background-end-rgb: 2, 6, 23;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(to bottom, transparent, rgb(var(--background-end-rgb)))
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }

  .accent-underline {
    @apply relative pb-1;
  }

  .accent-underline::after {
    content: "";
    @apply absolute bottom-0 left-0 w-full h-0.5 bg-gradient-to-r from-primary-400 to-secondary-400 rounded-full transform scale-x-0 transition-transform duration-300 origin-bottom-left;
  }

  .accent-underline:hover::after {
    @apply scale-x-100;
  }

  .gradient-text {
    @apply text-transparent bg-clip-text bg-gradient-to-r from-primary-500 to-secondary-500;
  }

  .gradient-text-accent {
    @apply text-transparent bg-clip-text bg-gradient-to-r from-accent-400 to-tertiary-400;
  }

  .gradient-text-tertiary {
    @apply text-transparent bg-clip-text bg-gradient-to-r from-tertiary-400 to-secondary-400;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-float-delayed {
    animation: float 6s ease-in-out 2s infinite;
  }

  .animate-pulse-slow {
    animation: pulse 3s ease-in-out infinite;
  }

  .shadow-glow-primary {
    box-shadow: 0 0 15px rgba(var(--color-primary-500-rgb), 0.5);
    transition: box-shadow 0.3s ease-in-out;
  }

  .shadow-glow-primary:hover {
    box-shadow: 0 0 25px rgba(var(--color-primary-500-rgb), 0.7);
  }

  .shadow-glow-accent {
    box-shadow: 0 0 15px rgba(var(--color-accent-500-rgb), 0.5);
    transition: box-shadow 0.3s ease-in-out;
  }

  .shadow-glow-accent:hover {
    box-shadow: 0 0 25px rgba(var(--color-accent-500-rgb), 0.7);
  }

  .shadow-glow-tertiary {
    box-shadow: 0 0 15px rgba(var(--color-tertiary-500-rgb), 0.5);
    transition: box-shadow 0.3s ease-in-out;
  }

  .shadow-glow-tertiary:hover {
    box-shadow: 0 0 25px rgba(var(--color-tertiary-500-rgb), 0.7);
  }
}

@layer components {
  .glass-light {
    @apply bg-glass-light backdrop-blur-glass border border-white/30 shadow-glass;
  }

  .glass-dark {
    @apply bg-glass-dark backdrop-blur-glass border border-white/10 shadow-glass;
  }

  .glass-card {
    @apply rounded-xl p-4 transition-all duration-300 hover:shadow-lg;
  }

  .glass-button {
    @apply px-4 py-2 rounded-lg transition-all duration-300 hover:shadow-md;
  }

  .card-playful {
    @apply relative rounded-xl overflow-hidden transition-all duration-300 hover:-translate-y-1;
  }

  .card-playful::before {
    content: "";
    @apply absolute inset-0 bg-gradient-to-br from-primary-200/20 to-secondary-200/20 dark:from-primary-800/20 dark:to-secondary-800/20 opacity-0 transition-opacity duration-300;
  }

  .card-playful:hover::before {
    @apply opacity-100;
  }

  .card-highlight {
    @apply relative;
  }

  .card-highlight::after {
    content: "";
    @apply absolute -top-1 -right-1 w-6 h-6 bg-tertiary-400 rounded-full opacity-75 animate-pulse-slow;
  }

  .btn-playful {
    @apply transform transition-all duration-300 hover:scale-105 active:scale-95;
  }

  .section-divider {
    @apply relative h-24 overflow-hidden;
  }

  .section-divider::after {
    content: "";
    @apply absolute inset-0 bg-gradient-playful from-primary-200/20 via-transparent to-secondary-200/20 dark:from-primary-900/20 dark:via-transparent dark:to-secondary-900/20;
  }

  .glass-effect {
    @apply bg-white/30 dark:bg-gray-800/30 backdrop-blur-sm;
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-15px);
  }
}

@keyframes pulse {
  0%,
  100% {
    opacity: 0.5;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.1);
  }
}
